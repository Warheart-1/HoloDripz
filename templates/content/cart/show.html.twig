{% extends 'base.html.twig' %}

{% block body %}
{% if cartProducts is empty %}
    <div class=" text-gray-600 text-xl ml-16 mt-8">   
        <h1>Your cart is empty</h1>
    </div>
{% else %}
    <div class=" text-gray-600 text-xl ml-16 mt-8">   
        <h1>Cart</h1>
    </div>
{% endif %}


{% for cartProduct in cartProducts %}

<div data-idProduct="{{ cartProduct.id }}" class=" grid ">
    <h1 class=" text-center">
        Name : {{ cartProduct.product.name }}
    </h1> 
    <h3 class=" text-center">
        Price : {{ cartProduct.product.price }}
    </h3>
    <div class=" flex flex-row justify-center items-center border-b-4 w-fit m-auto mt-4"> 
        <button class=" w-8 " data-id="{{ cartProduct.id }}" data-idButton="quantityIncress">+</button>
            <input class=" w-10 text-center" type="number" min="0" data-id="{{ cartProduct.id }}" pattern="[0-9]*" data-class="quantityValue" value="{{ cartProduct.quantity }}">
        <button class=" w-8 " data-id="{{ cartProduct.id }}" data-idButton="quantityDecress">-</button>
    </div>
    <h3 data-class="totalPrice" class=" text-center">
        Total : {{ cartProduct.product.price * cartProduct.quantity }} $
    </h3>
    <button data-id="{{ cartProduct.id }}" data-class="deleteProduct">Delete</button>
</div>

{% endfor %}

<div class=" text-gray-600 text-xl ml-16 mt-8">   
    <h1 id="subtotal">SUBTOTAL : {{subTotal}} $</h1>
</div>
{% if cartProducts is not empty %}
    <div class=" text-gray-600 text-xl ml-16 mt-8">   
        <a href=" {{ path("app_checkout") }} ">Checkout</a>
    </div>
{% endif %}


{% block javascript %}

    <script>

        const selectorQuantity =  document.querySelectorAll('[data-class="quantityValue"]');
        const buttonPlus = document.querySelectorAll('[data-idButton="quantityIncress"]');
        const buttonMinus = document.querySelectorAll('[data-idButton="quantityDecress"]');
        const subtotal = document.getElementById('subtotal');

        selectorQuantity.forEach((element) => {
            element.addEventListener('change', async (event) => {
                event.preventDefault();
                const url = '/cart/update'
                const data = {
                    quantity: event.target.value,
                    id: event.target.dataset.id
                }
                const response = await fetchQuantity(url, JSON.stringify(data), 'POST', 'Content-Type : application/json');
                console.log(response);
                const quantity = await response.json();
                console.log(quantity);
                event.target.parentNode.parentNode.querySelector('[data-class="totalPrice"]').innerHTML = "Total : " + quantity.totalPrice + "$";
                subtotal.innerHTML = "SUBTOTAL : " + quantity.subTotal + "$";

            });
        });

        const selectorDelete =  document.querySelectorAll('[data-class="deleteProduct"]');

        selectorDelete.forEach((element) => {
            element.addEventListener('click', async (event) => {
                event.preventDefault();
                const url = '/cart/delete'
                const data = {
                    id: event.target.dataset.id
                }
                if(!confirm('Are you sure you want to delete this product from your cart ?')) {
                    return;
                }
                const response = await fetchQuantity(url, JSON.stringify(data), 'POST', 'Content-Type : application/json');
                console.log(response);
                const quantity = await response.json();
                console.log(quantity);
                subtotal.innerHTML = "SUBTOTAL : " + quantity.subTotal + "$";
                document.querySelector(`[data-idProduct="${quantity.id}"]`).remove();
                if(quantity.subTotal === 0) {
                    document.querySelector('h1').innerHTML = "Your cart is empty";
                    document.querySelector('a').remove();
                }
            });
        });

        buttonPlus.forEach((bp)=> {
            bp.addEventListener('click', async (event) => {
                event.preventDefault();
                event.target.parentNode.querySelector('[data-class="quantityValue"]').value++;
                const url = '/cart/update'
                const data = {
                    quantity: event.target.parentNode.querySelector('[data-class="quantityValue"]').value,
                    id: event.target.dataset.id
                }
                const response = await fetchQuantity(url, JSON.stringify(data), 'POST', 'Content-Type : application/json');
                console.log(response);
                const quantity = await response.json();
                console.log(quantity);
                event.target.parentNode.parentNode.querySelector('[data-class="totalPrice"]').innerHTML = "Total : " + quantity.totalPrice + "$";
                subtotal.innerHTML = "SUBTOTAL : " + quantity.subTotal + "$";

            })
        })

        buttonMinus.forEach((bm)=> {
            bm.addEventListener('click', async (event) => {
                event.preventDefault();
                event.target.parentNode.querySelector('[data-class="quantityValue"]').value--;
                const url = '/cart/update'
                const data = {
                    quantity: event.target.parentNode.querySelector('[data-class="quantityValue"]').value,
                    id: event.target.dataset.id
                }
                const response = await fetchQuantity(url, JSON.stringify(data), 'POST', 'Content-Type : application/json');
                console.log(response);
                const quantity = await response.json();
                console.log(quantity);
                event.target.parentNode.parentNode.querySelector('[data-class="totalPrice"]').innerHTML = "Total : " + quantity.totalPrice + "$";
                subtotal.innerHTML = "SUBTOTAL : " + quantity.subTotal + "$";

            })
        })

        async function fetchQuantity(url, data = null, method, headers) {
            const response = await fetch(url, {
                method: method,
                headers: {
                    headers,
                },
                body: data
            });
            return response;
        }

    </script>
    
{% endblock %}

{% endblock %}



